import * as tslib_1 from "tslib";
var SimpleModalModule_1;
import { CommonModule } from '@angular/common';
import { ApplicationRef, ComponentFactoryResolver, Injector, NgModule, } from '@angular/core';
import { SimpleModalHolderComponent } from './simple-modal-holder.component';
import { SimpleModalWrapperComponent } from './simple-modal-wrapper.component';
import { SimpleModalService, SimpleModalServiceConfig } from './simple-modal.service';
import { SimpleModalServiceFactory } from './simple-modal-service.factory';
import { defaultSimpleModalOptions, DefaultSimpleModalOptionConfig, } from './simple-modal-options';
import { DraggableDirective } from './simple-modal-draggable.directive';
const ɵ0 = defaultSimpleModalOptions;
let SimpleModalModule = SimpleModalModule_1 = class SimpleModalModule {
    constructor() { }
    static forRoot(config, defaultModalOptions) {
        return {
            ngModule: SimpleModalModule_1,
            providers: [
                { provide: SimpleModalServiceConfig, useValue: config },
                {
                    provide: SimpleModalService,
                    useFactory: SimpleModalServiceFactory,
                    deps: [ComponentFactoryResolver, ApplicationRef, Injector, SimpleModalServiceConfig],
                },
                {
                    provide: DefaultSimpleModalOptionConfig,
                    useValue: defaultModalOptions || defaultSimpleModalOptions,
                }
            ],
        };
    }
};
SimpleModalModule = SimpleModalModule_1 = tslib_1.__decorate([
    NgModule({
        declarations: [SimpleModalHolderComponent, SimpleModalWrapperComponent, DraggableDirective],
        providers: [
            SimpleModalService,
            {
                provide: DefaultSimpleModalOptionConfig,
                useValue: ɵ0,
            },
        ],
        imports: [CommonModule],
        entryComponents: [SimpleModalHolderComponent, SimpleModalWrapperComponent],
    })
], SimpleModalModule);
export { SimpleModalModule };
export { ɵ0 };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2ltcGxlLW1vZGFsLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1zaW1wbGUtbW9kYWwvIiwic291cmNlcyI6WyJzaW1wbGUtbW9kYWwvc2ltcGxlLW1vZGFsLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQ0wsY0FBYyxFQUNkLHdCQUF3QixFQUN4QixRQUFRLEVBRVIsUUFBUSxHQUNULE1BQU0sZUFBZSxDQUFDO0FBRXZCLE9BQU8sRUFBRSwwQkFBMEIsRUFBRSxNQUFNLGlDQUFpQyxDQUFDO0FBQzdFLE9BQU8sRUFBRSwyQkFBMkIsRUFBRSxNQUFNLGtDQUFrQyxDQUFDO0FBQy9FLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSx3QkFBd0IsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQ3RGLE9BQU8sRUFBRSx5QkFBeUIsRUFBRSxNQUFNLGdDQUFnQyxDQUFDO0FBQzNFLE9BQU8sRUFDTCx5QkFBeUIsRUFDekIsOEJBQThCLEdBRS9CLE1BQU0sd0JBQXdCLENBQUM7QUFDaEMsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sb0NBQW9DLENBQUM7V0FReEQseUJBQXlCO0FBTXpDLElBQWEsaUJBQWlCLHlCQUE5QixNQUFhLGlCQUFpQjtJQXNCNUIsZ0JBQWUsQ0FBQztJQXJCaEIsTUFBTSxDQUFDLE9BQU8sQ0FDWixNQUFnQyxFQUNoQyxtQkFBd0M7UUFFeEMsT0FBTztZQUNMLFFBQVEsRUFBRSxtQkFBaUI7WUFDM0IsU0FBUyxFQUFFO2dCQUNULEVBQUUsT0FBTyxFQUFFLHdCQUF3QixFQUFFLFFBQVEsRUFBRSxNQUFNLEVBQUU7Z0JBQ3ZEO29CQUNFLE9BQU8sRUFBRSxrQkFBa0I7b0JBQzNCLFVBQVUsRUFBRSx5QkFBeUI7b0JBQ3JDLElBQUksRUFBRSxDQUFDLHdCQUF3QixFQUFFLGNBQWMsRUFBRSxRQUFRLEVBQUUsd0JBQXdCLENBQUM7aUJBQ3JGO2dCQUNEO29CQUNFLE9BQU8sRUFBRSw4QkFBOEI7b0JBQ3ZDLFFBQVEsRUFBRSxtQkFBbUIsSUFBSSx5QkFBeUI7aUJBQzNEO2FBQ0Y7U0FDRixDQUFDO0lBQ0osQ0FBQztDQUdGLENBQUE7QUF2QlksaUJBQWlCO0lBWjdCLFFBQVEsQ0FBQztRQUNSLFlBQVksRUFBRSxDQUFDLDBCQUEwQixFQUFFLDJCQUEyQixFQUFFLGtCQUFrQixDQUFDO1FBQzNGLFNBQVMsRUFBRTtZQUNULGtCQUFrQjtZQUNsQjtnQkFDRSxPQUFPLEVBQUUsOEJBQThCO2dCQUN2QyxRQUFRLElBQTJCO2FBQ3BDO1NBQ0Y7UUFDRCxPQUFPLEVBQUUsQ0FBQyxZQUFZLENBQUM7UUFDdkIsZUFBZSxFQUFFLENBQUMsMEJBQTBCLEVBQUUsMkJBQTJCLENBQUM7S0FDM0UsQ0FBQztHQUNXLGlCQUFpQixDQXVCN0I7U0F2QlksaUJBQWlCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7XG4gIEFwcGxpY2F0aW9uUmVmLFxuICBDb21wb25lbnRGYWN0b3J5UmVzb2x2ZXIsXG4gIEluamVjdG9yLFxuICBNb2R1bGVXaXRoUHJvdmlkZXJzLFxuICBOZ01vZHVsZSxcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IFNpbXBsZU1vZGFsSG9sZGVyQ29tcG9uZW50IH0gZnJvbSAnLi9zaW1wbGUtbW9kYWwtaG9sZGVyLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBTaW1wbGVNb2RhbFdyYXBwZXJDb21wb25lbnQgfSBmcm9tICcuL3NpbXBsZS1tb2RhbC13cmFwcGVyLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBTaW1wbGVNb2RhbFNlcnZpY2UsIFNpbXBsZU1vZGFsU2VydmljZUNvbmZpZyB9IGZyb20gJy4vc2ltcGxlLW1vZGFsLnNlcnZpY2UnO1xuaW1wb3J0IHsgU2ltcGxlTW9kYWxTZXJ2aWNlRmFjdG9yeSB9IGZyb20gJy4vc2ltcGxlLW1vZGFsLXNlcnZpY2UuZmFjdG9yeSc7XG5pbXBvcnQge1xuICBkZWZhdWx0U2ltcGxlTW9kYWxPcHRpb25zLFxuICBEZWZhdWx0U2ltcGxlTW9kYWxPcHRpb25Db25maWcsXG4gIFNpbXBsZU1vZGFsT3B0aW9ucyxcbn0gZnJvbSAnLi9zaW1wbGUtbW9kYWwtb3B0aW9ucyc7XG5pbXBvcnQgeyBEcmFnZ2FibGVEaXJlY3RpdmUgfSBmcm9tICcuL3NpbXBsZS1tb2RhbC1kcmFnZ2FibGUuZGlyZWN0aXZlJztcblxuQE5nTW9kdWxlKHtcbiAgZGVjbGFyYXRpb25zOiBbU2ltcGxlTW9kYWxIb2xkZXJDb21wb25lbnQsIFNpbXBsZU1vZGFsV3JhcHBlckNvbXBvbmVudCwgRHJhZ2dhYmxlRGlyZWN0aXZlXSxcbiAgcHJvdmlkZXJzOiBbXG4gICAgU2ltcGxlTW9kYWxTZXJ2aWNlLFxuICAgIHtcbiAgICAgIHByb3ZpZGU6IERlZmF1bHRTaW1wbGVNb2RhbE9wdGlvbkNvbmZpZyxcbiAgICAgIHVzZVZhbHVlOiBkZWZhdWx0U2ltcGxlTW9kYWxPcHRpb25zLFxuICAgIH0sXG4gIF0sXG4gIGltcG9ydHM6IFtDb21tb25Nb2R1bGVdLFxuICBlbnRyeUNvbXBvbmVudHM6IFtTaW1wbGVNb2RhbEhvbGRlckNvbXBvbmVudCwgU2ltcGxlTW9kYWxXcmFwcGVyQ29tcG9uZW50XSxcbn0pXG5leHBvcnQgY2xhc3MgU2ltcGxlTW9kYWxNb2R1bGUge1xuICBzdGF0aWMgZm9yUm9vdChcbiAgICBjb25maWc6IFNpbXBsZU1vZGFsU2VydmljZUNvbmZpZyxcbiAgICBkZWZhdWx0TW9kYWxPcHRpb25zPzogU2ltcGxlTW9kYWxPcHRpb25zXG4gICk6IE1vZHVsZVdpdGhQcm92aWRlcnM8U2ltcGxlTW9kYWxNb2R1bGU+IHtcbiAgICByZXR1cm4ge1xuICAgICAgbmdNb2R1bGU6IFNpbXBsZU1vZGFsTW9kdWxlLFxuICAgICAgcHJvdmlkZXJzOiBbXG4gICAgICAgIHsgcHJvdmlkZTogU2ltcGxlTW9kYWxTZXJ2aWNlQ29uZmlnLCB1c2VWYWx1ZTogY29uZmlnIH0sXG4gICAgICAgIHtcbiAgICAgICAgICBwcm92aWRlOiBTaW1wbGVNb2RhbFNlcnZpY2UsXG4gICAgICAgICAgdXNlRmFjdG9yeTogU2ltcGxlTW9kYWxTZXJ2aWNlRmFjdG9yeSxcbiAgICAgICAgICBkZXBzOiBbQ29tcG9uZW50RmFjdG9yeVJlc29sdmVyLCBBcHBsaWNhdGlvblJlZiwgSW5qZWN0b3IsIFNpbXBsZU1vZGFsU2VydmljZUNvbmZpZ10sXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICBwcm92aWRlOiBEZWZhdWx0U2ltcGxlTW9kYWxPcHRpb25Db25maWcsXG4gICAgICAgICAgdXNlVmFsdWU6IGRlZmF1bHRNb2RhbE9wdGlvbnMgfHwgZGVmYXVsdFNpbXBsZU1vZGFsT3B0aW9ucyxcbiAgICAgICAgfVxuICAgICAgXSxcbiAgICB9O1xuICB9XG5cbiAgY29uc3RydWN0b3IoKSB7fVxufVxuIl19