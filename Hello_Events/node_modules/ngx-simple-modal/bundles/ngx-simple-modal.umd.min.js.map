{"version":3,"sources":["../../node_modules/tslib/tslib.es6.js","ng://ngx-simple-modal/simple-modal/simple-modal-options.ts","ng://ngx-simple-modal/simple-modal/simple-modal-wrapper.component.ts","ng://ngx-simple-modal/simple-modal/simple-modal-draggable.directive.ts","ng://ngx-simple-modal/simple-modal/simple-modal-holder.component.ts","ng://ngx-simple-modal/simple-modal/simple-modal.service.ts","ng://ngx-simple-modal/simple-modal/simple-modal-service.factory.ts","ng://ngx-simple-modal/simple-modal/simple-modal.module.ts","ng://ngx-simple-modal/simple-modal/simple-modal.component.ts"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__decorate","decorators","target","key","desc","d","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__read","o","m","Symbol","iterator","e","ar","next","done","push","value","error","__spread","concat","DefaultSimpleModalOptionConfig","InjectionToken","defaultSimpleModalOptions","closeOnEscape","closeOnClickOutside","bodyClass","wrapperDefaultClasses","wrapperClass","draggableClass","animationDuration","autoFocus","draggable","SimpleModalWrapperComponent","resolver","modalClasses","addComponent","component","factory","resolveComponentFactory","injector","ReflectiveInjector","fromResolvedProviders","viewContainer","componentRef","create","insert","hostView","content","instance","wrapper","ref","onClickOutsideModalContent","callback","containerEl","nativeElement","clickOutsideCallback","event","addEventListener","ngOnDestroy","removeEventListener","ComponentFactoryResolver","tslib_1.__decorate","ViewChild","read","ViewContainerRef","static","ElementRef","Component","selector","template","DraggableDirective","host","zone","renderer","dragEnabled","dragged","EventEmitter","delta","x","y","offset","enabled","destroy$","Subject","reset","ngAfterViewInit","init","ngOnChanges","dragTarget","handle","setStyle","defaultValues","translate","setupEvents","_this","runOutsideAngular","mousedown$","fromEvent","mousemove$","document","mouseup$","pipe","filter","map","startX","clientX","startY","clientY","switchMap","_a","preventDefault","takeUntil","subscribe","emit","requestAnimationFrame","transform","Error","dragHandle","Element","querySelector","addClass","HTMLElement","NgZone","Renderer2","Input","Output","Directive","SimpleModalHolderComponent","ngZone","modals","previousActiveElement","addModal","data","options","of","modalWrapper","createComponent","_componentRef","_component","wait","then","toggleWrapperClass","toggleBodyClass","setDraggable","autoFocusFirstElement","markAsReady","onClosing","modal","removeModal","configureCloseOnClickOutside","mapDataObject","setupObserver","closingModal","removeModalFromArray","restorePreviousFocus","removeAllModals","Promise","all","body","getElementsByTagName","bodyClassItems","split","_b","classList","add","remove","close","componentWrapper","focusable","querySelectorAll","activeElement","focus","modalWrapperEl","wrapperClassList","wrapperClassItems","toString","indexOf","draggableDirective","location","undefined","ms","resolve","reject","setTimeout","index","splice","Inject","args","tslib_1.__param","container","SimpleModalService","applicationRef","config","modalHolderComponent","createSimpleModalHolder","removeAll","_container","getElementById","componentRootViewContainer","rootNodes","componentRootNode","attachView","onDestroy","detachView","appendChild","ApplicationRef","Injector","SimpleModalServiceConfig","type","Optional","Injectable","SimpleModalServiceFactory","SimpleModalModule","forRoot","defaultModalOptions","ngModule","SimpleModalModule_1","providers","provide","useValue","useFactory","deps","NgModule","declarations","Éµ0","imports","CommonModule","entryComponents","SimpleModalComponent","_ready$","BehaviorSubject","closerCallback","keys","length_1","Observable","observer","v","result","complete","onKeydownHandler","evt","asObservable","HostListener"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { InjectionToken } from '@angular/core';\n\nexport const DefaultSimpleModalOptionConfig = new InjectionToken<SimpleModalOptions>('default-simple-modal.config');\n\nexport interface SimpleModalOptions {\n  closeOnEscape: boolean;\n  closeOnClickOutside: boolean;\n  bodyClass: string;\n  wrapperDefaultClasses: string;\n  wrapperClass: string;\n  draggableClass: string;\n  animationDuration: number;\n  autoFocus: boolean;\n  draggable: boolean;\n}\n\nexport type SimpleModalOptionsOverrides = Partial<SimpleModalOptions>;\n\nexport const defaultSimpleModalOptions: SimpleModalOptions = {\n  closeOnEscape: false,\n  closeOnClickOutside: false,\n  bodyClass: 'modal-open',\n  wrapperDefaultClasses: 'modal fade-anim',\n  wrapperClass: 'in',\n  draggableClass: 'draggable',\n  animationDuration: 300,\n  autoFocus: false,\n  draggable: false,\n};\n","import {\n  Component,\n  ComponentFactoryResolver,\n  ElementRef,\n  OnDestroy,\n  ReflectiveInjector,\n  Type,\n  ViewChild,\n  ViewContainerRef, ComponentRef,\n} from '@angular/core';\nimport { SimpleModalComponent } from './simple-modal.component';\n\n/**\n * The modal backdrop wrapping wrapper to the modal\n */\n@Component({\n  selector: 'simple-modal-wrapper',\n  template: `\n    <div #wrapper [ngClass]=\"modalClasses\" [ngStyle]=\"{ display: 'block' }\" role=\"dialog\">\n      <ng-template #viewContainer></ng-template>\n    </div>\n  `,\n})\nexport class SimpleModalWrapperComponent implements OnDestroy {\n  /**\n   * Target viewContainer to insert modal content component\n   */\n  @ViewChild('viewContainer', { read: ViewContainerRef, static: true }) viewContainer;\n\n  /**\n   * Link wrapper DOM element\n   */\n  @ViewChild('wrapper', { read: ElementRef, static: true })\n  wrapper: ElementRef;\n\n  /**\n   * Wrapper modal and fade classes\n   */\n  modalClasses = 'modal fade-anim';\n\n  /**\n   * Dialog content componet\n   * @type {SimpleModalComponent}\n   */\n  content: SimpleModalComponent<any, any>;\n\n  /**\n   * Click outside callback\n   */\n  clickOutsideCallback: (event: MouseEvent) => void;\n\n  /**\n   * Constructor\n   * @param {ComponentFactoryResolver} resolver\n   */\n  constructor(private resolver: ComponentFactoryResolver) {}\n\n  /**\n   * Adds content modal component to wrapper\n   * @param {Type<SimpleModalComponent>} component\n   * @return {SimpleModalComponent}\n   */\n  addComponent<T, T1>(component: Type<SimpleModalComponent<T, T1>>): {ref: ComponentRef<SimpleModalComponent<T, T1>>, component: SimpleModalComponent<T, T1>} {\n    const factory = this.resolver.resolveComponentFactory(component);\n    const injector = ReflectiveInjector.fromResolvedProviders([], this.viewContainer.injector);\n    const componentRef = factory.create(injector);\n    this.viewContainer.insert(componentRef.hostView);\n    this.content = <SimpleModalComponent<T, T1>>componentRef.instance;\n    this.content.wrapper = this.wrapper;\n    return {ref: componentRef, component: this.content};\n  }\n\n  /**\n   * Configures the function to call when you click on background of a modal but not the contents\n   * @param callback\n   */\n  onClickOutsideModalContent(callback: () => void) {\n    const containerEl = this.wrapper.nativeElement;\n\n    this.clickOutsideCallback = (event: MouseEvent) => {\n      if (event.target === containerEl) {\n        callback();\n      }\n    };\n\n    containerEl.addEventListener('click', this.clickOutsideCallback, false);\n  }\n\n  ngOnDestroy() {\n    if (this.clickOutsideCallback) {\n      const containerEl = this.wrapper.nativeElement;\n      containerEl.removeEventListener('click', this.clickOutsideCallback, false);\n      this.clickOutsideCallback = null;\n    }\n  }\n}\n","import {\n  Directive,\n  AfterViewInit,\n  OnDestroy,\n  Input,\n  Output,\n  ElementRef,\n  NgZone,\n  EventEmitter,\n  Renderer2,\n  OnChanges\n} from '@angular/core';\nimport { Subject, fromEvent } from 'rxjs';\nimport { filter, switchMap, map, takeUntil } from 'rxjs/operators';\n\nexport interface DraggedEvent {\n  x: number;\n  y: number;\n}\n\nexport interface DragOffset {\n  x?: number;\n  y?: number;\n}\n\n@Directive({\n  selector: '[dialogDraggable]'\n})\nexport class DraggableDirective implements AfterViewInit, OnChanges, OnDestroy {\n  @Input()\n  dragHandle?: string | Element;\n  @Input()\n  dragTarget: string | Element;\n  @Input()\n  dragEnabled = false;\n  @Input()\n  set dialogDragOffset(offset: DragOffset) {\n    this.reset(offset);\n  }\n  @Output()\n  dragged = new EventEmitter<DraggedEvent>();\n\n  /** Element to be dragged */\n  private target: HTMLElement;\n  /** Drag handle */\n  private handle: Element;\n  private delta = { x: 0, y: 0 };\n  private offset = { x: 0, y: 0 };\n  private enabled = true;\n  private destroy$ = new Subject<void>();\n\n  constructor(private host: ElementRef, private zone: NgZone, private renderer: Renderer2) {}\n\n  public ngAfterViewInit(): void {\n    if (!this.enabled) {\n      return;\n    }\n\n    this.init();\n  }\n\n  public ngOnChanges() {\n    if (!this.enabled && this.dragEnabled && this.dragTarget) {\n      this.enabled = true;\n      /** determine if the component has been init by the handle variable */\n      if (this.handle) {\n        this.renderer.setStyle(this.handle, 'cursor', 'move');\n      } else if (this.enabled) {\n        this.init();\n      }\n    }\n\n    if (!this.dragEnabled) {\n      this.enabled = false;\n      if (this.handle) {\n        this.renderer.setStyle(this.handle, 'cursor', '');\n      }\n    }\n  }\n\n  public ngOnDestroy(): void {\n    this.destroy$.next();\n  }\n\n  reset(offset?: DragOffset) {\n    const defaultValues = { x: 0, y: 0 };\n    this.offset = { ...defaultValues, ...offset };\n    this.delta = { ...defaultValues };\n    this.translate();\n  }\n\n  private setupEvents() {\n    this.zone.runOutsideAngular(() => {\n      const mousedown$ = fromEvent<MouseEvent>(this.handle, 'mousedown');\n      const mousemove$ = fromEvent<MouseEvent>(document, 'mousemove');\n      const mouseup$ = fromEvent<MouseEvent>(document, 'mouseup');\n\n      const mousedrag$ = mousedown$.pipe(\n        filter(() => this.enabled),\n        map(event => ({\n          startX: event.clientX,\n          startY: event.clientY\n        })),\n        switchMap(({ startX, startY }) =>\n          mousemove$.pipe(\n            map(event => {\n              event.preventDefault();\n              this.delta = {\n                x: event.clientX - startX,\n                y: event.clientY - startY\n              };\n            }),\n            takeUntil(mouseup$)\n          )\n        ),\n        takeUntil(this.destroy$)\n      );\n\n      mousedrag$.subscribe(() => {\n        if (this.delta.x === 0 && this.delta.y === 0) {\n          return;\n        }\n\n        this.translate();\n      });\n\n      mouseup$\n        .pipe(\n          filter(() => this.enabled),\n          /** Only emit change if the element has moved */\n          filter(() => this.delta.x !== 0 || this.delta.y !== 0),\n          takeUntil(this.destroy$)\n        )\n        .subscribe(() => {\n          this.offset.x += this.delta.x;\n          this.offset.y += this.delta.y;\n          this.dragged.emit(this.offset);\n          this.delta = { x: 0, y: 0 };\n        });\n    });\n  }\n\n  private translate() {\n    if (this.target) {\n      this.zone.runOutsideAngular(() => {\n        requestAnimationFrame(() => {\n          const transform = `translate(${this.offset.x + this.delta.x}px, ${this.offset.y + this.delta.y}px)`;\n          this.renderer.setStyle(this.target, 'transform', transform);\n        });\n      });\n    }\n  }\n\n  /**\n   * Init the directive\n   */\n  private init() {\n    if (!this.dragTarget) {\n      throw new Error('You need to specify the drag target');\n    }\n\n    this.handle =\n      this.dragHandle instanceof Element\n        ? this.dragHandle\n        : typeof this.dragHandle === 'string' && this.dragHandle\n        ? document.querySelector(this.dragHandle as string)\n        : this.host.nativeElement;\n\n    /** add the move cursor */\n    if (this.handle && this.enabled) {\n      this.renderer.addClass(this.handle, 'handle');\n    }\n\n    this.target =\n      this.dragTarget instanceof HTMLElement\n        ? this.dragTarget\n        : document.querySelector(this.dragTarget as string);\n\n    this.setupEvents();\n\n    this.translate();\n  }\n}\n","import { Component, ComponentFactoryResolver, ElementRef, Inject, Type, ViewContainerRef, ViewChild, Renderer2, ComponentRef, NgZone } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { DefaultSimpleModalOptionConfig, SimpleModalOptions, SimpleModalOptionsOverrides } from './simple-modal-options';\nimport { SimpleModalWrapperComponent } from './simple-modal-wrapper.component';\nimport { SimpleModalComponent } from './simple-modal.component';\nimport { DraggableDirective } from './simple-modal-draggable.directive';\n\n/**\n * View container manager which manages a list of modals currently active\n * inside the viewvontainer\n */\n@Component({\n  selector: 'simple-modal-holder',\n  template: '<ng-template #viewContainer></ng-template>',\n})\nexport class SimpleModalHolderComponent {\n  /**\n   * Target viewContainer to insert modals\n   */\n  @ViewChild('viewContainer', { read: ViewContainerRef, static: true }) viewContainer;\n\n  /**\n   * modal collection, maintained by addModal and removeModal\n   * @type {Array<SimpleModalComponent> }\n   */\n  modals: Array<SimpleModalComponent<any, any>> = [];\n\n  /**\n   * if auto focus is on and no element focused, store it here to be restored back after close\n   */\n  previousActiveElement = null;\n\n  /**\n   * Constructor\n   * @param {ComponentFactoryResolver} resolver\n   * @param renderer\n   * @param ngZone\n   * @param defaultSimpleModalOptions\n   */\n  constructor(\n    private resolver: ComponentFactoryResolver,\n    private renderer: Renderer2,\n    private ngZone: NgZone,\n    @Inject(DefaultSimpleModalOptionConfig) private defaultSimpleModalOptions: SimpleModalOptions,\n  ) {\n  }\n\n  /**\n   * Configures then adds modal to the modals array, and populates with data passed in\n   * @param {Type<SimpleModalComponent>} component\n   * @param {object?} data\n   * @param {SimpleModalOptionsOverrides?} options\n   * @return {Observable<*>}\n   */\n  addModal<T, T1>(\n    component: Type<SimpleModalComponent<T, T1>>,\n    data?: T,\n    options?: SimpleModalOptionsOverrides,\n  ): Observable<T1> {\n    // create component\n    if (!this.viewContainer) {\n      return of(null);\n    }\n    const factory = this.resolver.resolveComponentFactory(SimpleModalWrapperComponent);\n    const componentRef = this.viewContainer.createComponent(factory);\n    const modalWrapper: SimpleModalWrapperComponent = <SimpleModalWrapperComponent>(\n      componentRef.instance\n    );\n    const { ref: _componentRef, component: _component } = modalWrapper.addComponent(component);\n\n    // assign options refs\n    _component.options = options = Object.assign({}, this.defaultSimpleModalOptions, options) as SimpleModalOptions;\n\n    // set base classes for wrapper\n    modalWrapper.modalClasses = options.wrapperDefaultClasses;\n\n    // add to stack\n    this.modals.push(_component);\n\n    // wait a tick then setup the following while adding a modal\n    this.wait().then(() => {\n      this.toggleWrapperClass(modalWrapper.wrapper, options.wrapperClass);\n      this.toggleBodyClass(options.bodyClass);\n      if (options.draggable) {\n        this.setDraggable(_componentRef, options);\n      }\n      this.wait(options.animationDuration).then(() => {\n        this.autoFocusFirstElement(_component.wrapper, options.autoFocus);\n        _component.markAsReady();\n      });\n    });\n\n    // when closing modal remove it\n    _component.onClosing(modal => this.removeModal(modal));\n\n    // if clicking on background closes modal\n    this.configureCloseOnClickOutside(modalWrapper);\n\n    // map and return observable\n    _component.mapDataObject(data);\n\n    return _component.setupObserver();\n  }\n\n  /**\n   * triggers components close function\n   * to take effect\n   * @returns {Promise<void>}\n   * @param closingModal\n   */\n  removeModal(closingModal: SimpleModalComponent<any, any>): Promise<any> {\n    const options = closingModal.options;\n    this.toggleWrapperClass(closingModal.wrapper, options.wrapperClass);\n    return this.wait(options.animationDuration).then(() => {\n      this.removeModalFromArray(closingModal);\n      this.toggleBodyClass(options.bodyClass);\n      this.restorePreviousFocus();\n    });\n  }\n\n  /**\n   * Instructs all open modals to\n   */\n  removeAllModals(): Promise<any> {\n    return Promise.all(this.modals.map(modal => this.removeModal(modal)));\n  }\n\n  /**\n   * Bind a body class 'modal-open' to a condition of modals in pool > 0\n   * @param bodyClass - string to add and remove from body in document\n   */\n  private toggleBodyClass(bodyClass: string): void {\n    if (!bodyClass) {\n      return;\n    }\n    const body = document.getElementsByTagName('body')[0];\n    const bodyClassItems = bodyClass.split(' ');\n    if (!this.modals.length) {\n      body.classList.remove(...bodyClassItems);\n    } else {\n      body.classList.add(...bodyClassItems);\n    }\n  }\n\n  /**\n   * if the option to close on background click is set, then hook up a callback\n   * @param modalWrapper\n   */\n  private configureCloseOnClickOutside(modalWrapper: SimpleModalWrapperComponent) {\n    modalWrapper.onClickOutsideModalContent(() => {\n      if (modalWrapper.content.options.closeOnClickOutside) {\n        modalWrapper.content.close();\n      }\n    });\n  }\n\n  /**\n   * Auto focus o the first element if autofocus is on\n   * @param componentWrapper\n   * @param autoFocus\n   */\n  private autoFocusFirstElement(componentWrapper: ElementRef, autoFocus: boolean) {\n    if (autoFocus) {\n      const focusable = componentWrapper.nativeElement.querySelectorAll(\n        'button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])',\n      );\n      if (focusable && focusable.length) {\n        this.previousActiveElement = document.activeElement;\n        focusable[0].focus();\n      }\n    }\n  }\n\n  /**\n   * Restores the last focus is there was one\n   */\n  private restorePreviousFocus() {\n    if (this.previousActiveElement) {\n      this.previousActiveElement.focus();\n      this.previousActiveElement = null;\n    }\n  }\n\n  /**\n   * Configure the adding and removal of a wrapper class - predominantly animation focused\n   * @param modalWrapperEl\n   * @param wrapperClass\n   */\n  private toggleWrapperClass(modalWrapperEl: ElementRef, wrapperClass: string): void {\n    const wrapperClassList = modalWrapperEl.nativeElement.classList;\n    const wrapperClassItems = wrapperClass.split(' ');\n    if (wrapperClassList.toString().indexOf(wrapperClass) !== -1) {\n      wrapperClassList.remove(...wrapperClassItems);\n    } else {\n      wrapperClassList.add(...wrapperClassItems);\n    }\n  }\n\n  /**\n   * Enables the drag option on the modal if the options have it enabled\n   * @param component\n   * @param options\n   * @private\n   */\n  private setDraggable(component: ComponentRef<SimpleModalComponent<any, any>>, options: SimpleModalOptionsOverrides): void {\n    const draggableDirective = new DraggableDirective(component.location, this.ngZone, this.renderer);\n    draggableDirective.dragTarget = component.location.nativeElement;\n    draggableDirective.dragHandle = component.instance.handle ? component.instance.handle.nativeElement : undefined;\n    draggableDirective.ngAfterViewInit();\n    component.location.nativeElement.classList.add(options.draggableClass);\n  }\n\n  /**\n   * Helper function for a more readable timeout\n   * @param ms\n   */\n  private wait(ms: number = 0): Promise<unknown> {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => resolve(), ms);\n    });\n  }\n\n  /**\n   * Instructs the holder to remove the modal and\n   * removes this component from the collection\n   * @param {SimpleModalComponent} component\n   */\n  private removeModalFromArray(component): void {\n    const index = this.modals.indexOf(component);\n    if (index > -1) {\n      this.viewContainer.remove(index);\n      this.modals.splice(index, 1);\n    }\n  }\n}\n","import {\n  ApplicationRef,\n  ComponentFactoryResolver,\n  EmbeddedViewRef,\n  Injectable,\n  Injector,\n  Optional,\n  Type,\n} from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { SimpleModalHolderComponent } from './simple-modal-holder.component';\nimport { SimpleModalComponent } from './simple-modal.component';\nimport { SimpleModalOptionsOverrides } from './simple-modal-options';\n\nexport class SimpleModalServiceConfig {\n  container: HTMLElement | string = null;\n}\n\n@Injectable()\nexport class SimpleModalService {\n  /**\n   * Placeholder of modals\n   * @type {SimpleModalHolderComponent}\n   */\n  private modalHolderComponent: SimpleModalHolderComponent;\n\n  /**\n   * HTML container for modals\n   * type {HTMLElement | string}\n   */\n  private _container;\n\n  /**\n   * @param {ComponentFactoryResolver} resolver\n   * @param {ApplicationRef} applicationRef\n   * @param {Injector} injector\n   * @param {SimpleModalServiceConfig} config\n   */\n  constructor(\n    private resolver: ComponentFactoryResolver,\n    private applicationRef: ApplicationRef,\n    private injector: Injector,\n    @Optional() config: SimpleModalServiceConfig\n  ) {\n    if (config) {\n      this.container = config.container as any;\n    }\n  }\n\n  /**\n   * Adds modal\n   * @param {Type<SimpleModalComponent<T, T1>>} component\n   * @param {T?} data\n   * @param {SimpleModalOptionsOverrides?} options\n   * @return {Observable<T1>}\n   */\n  addModal<T, T1>(\n    component: Type<SimpleModalComponent<T, T1>>,\n    data?: T,\n    options?: SimpleModalOptionsOverrides\n  ): Observable<T1> {\n    if (!this.modalHolderComponent) {\n      this.modalHolderComponent = this.createSimpleModalHolder();\n    }\n    return this.modalHolderComponent.addModal<T, T1>(component, data, options);\n  }\n\n  /**\n   * Hides and removes modal from DOM, resolves promise when fully removed\n   * @param {SimpleModalComponent} component\n   * @return {Promise<{}>}\n\n   */\n  removeModal(component: SimpleModalComponent<any, any>): Promise<{}> {\n    if (!this.modalHolderComponent) {\n      return Promise.resolve({});\n    }\n    return this.modalHolderComponent.removeModal(component);\n  }\n\n  /**\n   * Closes all modals, resolves promise when they're fully removed\n   * @return {Promise<{}>}\n   */\n  removeAll(): Promise<{}> {\n    if (!this.modalHolderComponent) {\n      return Promise.resolve({});\n    }\n    return this.modalHolderComponent.removeAllModals();\n  }\n\n  /**\n   * Accessor for contain - will auto generate from string\n   * if needed or default to the root element if nothing was set\n   */\n\n  private set container(c) {\n    this._container = c;\n  }\n\n  private get container(): HTMLElement {\n    if (typeof this._container === 'string') {\n      this._container = document.getElementById(this._container);\n    }\n\n    if (!this._container && this.applicationRef['components'].length) {\n      const componentRootViewContainer = this.applicationRef['components'][0];\n      this.container = (componentRootViewContainer.hostView as EmbeddedViewRef<any>)\n        .rootNodes[0] as HTMLElement;\n    }\n\n    // fallback\n    if (!this._container || typeof this._container === 'string') {\n      this._container = document.getElementsByTagName('body')[0];\n    }\n\n    return this._container;\n  }\n\n  /**\n   * Creates and add to DOM modal holder component\n   * @return {SimpleModalHolderComponent}\n   */\n  private createSimpleModalHolder(): SimpleModalHolderComponent {\n    const componentFactory = this.resolver.resolveComponentFactory(SimpleModalHolderComponent);\n\n    const componentRef = componentFactory.create(this.injector);\n    const componentRootNode = (componentRef.hostView as EmbeddedViewRef<any>)\n      .rootNodes[0] as HTMLElement;\n\n    this.applicationRef.attachView(componentRef.hostView);\n\n    componentRef.onDestroy(() => {\n      this.applicationRef.detachView(componentRef.hostView);\n    });\n\n    this.container.appendChild(componentRootNode);\n\n    return componentRef.instance;\n  }\n}\n","import { ApplicationRef, ComponentFactoryResolver, Injector } from '@angular/core';\n\nimport { SimpleModalService, SimpleModalServiceConfig } from './simple-modal.service';\n\n/**\n * Modal service factory. Creates modal service with options\n * @param { ComponentFactoryResolver } resolver\n * @param { ApplicationRef } applicationRef\n * @param { Injector } injector\n * @param { SimpleModalServiceConfig } options\n * @return { SimpleModalService }\n */\nexport function SimpleModalServiceFactory(resolver: ComponentFactoryResolver,\n                                          applicationRef: ApplicationRef,\n                                          injector: Injector,\n                                          options: SimpleModalServiceConfig) {\n    return new SimpleModalService(resolver, applicationRef, injector, options);\n}\n","import { CommonModule } from '@angular/common';\nimport {\n  ApplicationRef,\n  ComponentFactoryResolver,\n  Injector,\n  ModuleWithProviders,\n  NgModule,\n} from '@angular/core';\n\nimport { SimpleModalHolderComponent } from './simple-modal-holder.component';\nimport { SimpleModalWrapperComponent } from './simple-modal-wrapper.component';\nimport { SimpleModalService, SimpleModalServiceConfig } from './simple-modal.service';\nimport { SimpleModalServiceFactory } from './simple-modal-service.factory';\nimport {\n  defaultSimpleModalOptions,\n  DefaultSimpleModalOptionConfig,\n  SimpleModalOptions,\n} from './simple-modal-options';\nimport { DraggableDirective } from './simple-modal-draggable.directive';\n\n@NgModule({\n  declarations: [SimpleModalHolderComponent, SimpleModalWrapperComponent, DraggableDirective],\n  providers: [\n    SimpleModalService,\n    {\n      provide: DefaultSimpleModalOptionConfig,\n      useValue: defaultSimpleModalOptions,\n    },\n  ],\n  imports: [CommonModule],\n  entryComponents: [SimpleModalHolderComponent, SimpleModalWrapperComponent],\n})\nexport class SimpleModalModule {\n  static forRoot(\n    config: SimpleModalServiceConfig,\n    defaultModalOptions?: SimpleModalOptions\n  ): ModuleWithProviders<SimpleModalModule> {\n    return {\n      ngModule: SimpleModalModule,\n      providers: [\n        { provide: SimpleModalServiceConfig, useValue: config },\n        {\n          provide: SimpleModalService,\n          useFactory: SimpleModalServiceFactory,\n          deps: [ComponentFactoryResolver, ApplicationRef, Injector, SimpleModalServiceConfig],\n        },\n        {\n          provide: DefaultSimpleModalOptionConfig,\n          useValue: defaultModalOptions || defaultSimpleModalOptions,\n        }\n      ],\n    };\n  }\n\n  constructor() {}\n}\n","import { ElementRef, HostListener, OnDestroy } from '@angular/core';\nimport { Observable, Observer, Subject, BehaviorSubject } from 'rxjs';\n\nimport { SimpleModalOptions } from './simple-modal-options';\n\nexport interface OnDestroyLike {\n  ngOnDestroy(): void;\n  [key: string]: any;\n}\n\n/**\n * Abstract modal\n * @template T - modal data;\n * @template T1 - modal result\n */\nexport abstract class SimpleModalComponent<T, T1> {\n  /**\n   * Observer to return result from modal\n   */\n  private observer: Observer<T1>;\n\n  /**\n   * Drag handle\n   */\n  handle: ElementRef | undefined;\n\n  /**\n   * Dialog result\n   * @type {T1}\n   */\n  result: T1;\n\n  /**\n   * Dialog wrapper (modal placeholder)\n   */\n  wrapper: ElementRef;\n\n  /**\n   * ref of options for this component\n   */\n  options: SimpleModalOptions;\n\n  /**\n   * ready$ is when all animations and focusing have comleted\n   */\n  _ready$ = new BehaviorSubject<boolean>(false);\n\n  /**\n   * Callback to the holders close function\n   */\n  private closerCallback: (component) => Promise<any> = () => Promise.resolve();\n\n  /**\n   * Constructor\n   */\n  constructor() {}\n\n  /**\n   * Maps your object passed in the creation to fields in your own Dialog classes\n   * @param {T} data\n   */\n  mapDataObject(data: T): void {\n    data = data || <T>{};\n    const keys = Object.keys(data);\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      if (\n        data[key] &&\n        this[key] &&\n        typeof data[key] === 'object' &&\n        typeof this[key] === 'object'\n      ) {\n        Object.assign(this[key], data[key]);\n      } else {\n        this[key] = data[key];\n      }\n    }\n  }\n\n  /**\n   * Setup observer\n   * @return {Observable<T1>}\n   */\n  setupObserver(): Observable<T1> {\n    return Observable.create(observer => {\n      this.observer = observer;\n\n      // called if observable is unsubscribed to\n      return () => {\n        this.close();\n      };\n    });\n  }\n\n  /**\n   * Defines what happens when close is called - default this\n   * will just call the default remove modal process. If overridden\n   * must include\n   * @param callback\n   */\n  onClosing(callback: (component: SimpleModalComponent<any, any>) => Promise<any>): void {\n    this.closerCallback = callback;\n  }\n\n  /**\n   * Closes modal\n   */\n  close(): Promise<any> {\n    return this.closerCallback(this).then(v => {\n      if (this.observer) {\n        this.observer.next(this.result);\n        this.observer.complete();\n      }\n      return v;\n    });\n  }\n\n  /**\n   * keypress binding ngx way\n   * @param evt\n   */\n  @HostListener('document:keydown.escape', ['$event'])\n  onKeydownHandler(evt: KeyboardEvent) {\n    if (this.options && this.options.closeOnEscape) {\n      this.close();\n    }\n  }\n\n  get ready$() {\n    return this._ready$.asObservable();\n  }\n\n  markAsReady() {\n    this._ready$.next(true);\n  }\n}\n"]}